#include <bits/stdc++.h>
using namespace std;
#define long long ll
typedef vector<int> vi;
typedef vector<vi> vii;

int n, m;
vii adj;
vi vis;

void dfs(int u) {
    vis[u] = 1; int loop = 0;
    for (int v = 1; v <= n; v++) {
        // cout << u << ' ' << v << ' ' << adj[u][v] << endl;
        if (!adj[u][v]) {
            continue;
        }
        loop++;
        if (!vis[v]) {
            dfs(v);
        }
    }
    if (loop <= 1) {vis[u] = 0;}
}

void solve() {
    cin >> n >> m;

    // corner
    if (n == 2) {
        if (m) {cout << "N" << endl; return;}
        else {cout << "S" << endl; return;}
    }


    vis = vi(n+1, 0);
    adj = vii(n+1);

    for(int i = 1; i <= n; i++) {adj[i]=vi(n+1,1); adj[i][i] = 0;}
    while(m--) {
        int u, v; cin >> u >> v;
        adj[u][v] = 0; adj[v][u] = 0;
    }

    dfs(1);

    // for (auto v : vis) {cout << v << endl;}
    if (count(begin(vis), end(vis), 1) == n) {cout << "S"; return;}
    cout << "N" << endl;
}

int main() {
    cin.tie(0); cout.tie(0);
    ios::sync_with_stdio(0);

    solve();
    // int t; cin >> t; while(t--) {solve();}

    return 0;
}